private double computeTemp (int row, int col){
    if (col == 0 || row == 0 || col == temps.length - 1 || row == temps[0].length - 1){
        return temps[row[[col];
    else {
        return (temps[row-1][col] + temps[row+1][col] + temps[row][col-1] + temps[row][col+1])/4;
    }
    }
}
public boolean updateAllTemps (double tolerance){
    double[][] afterTemps = new double[temps.length][temps[0].length]；

    for (int i = 0; i < temps.length; i++){
        for (int j = 0; j < temps[0].length; j++){
            temps[i][j] = computeTemps[i][j]; #格式错！应该是temps(row, col) = computeTemps (row, col);
            if Math.abs(temps[i][j] - compute [i][j]) <= tolerance){
                return true
            }
        }
    }   
    return false;
}
